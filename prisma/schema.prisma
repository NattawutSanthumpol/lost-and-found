// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  password  String
  firstName String
  lastName  String
  email     String?    @unique
  phone     String?    @unique
  sex       UserSex
  img       String?
  role      UserRole // "ADMIN" or "TEACHER"
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  LostItem  LostItem[]
}

model Student {
  id        Int        @id @default(autoincrement())
  firstName String
  lastName  String
  email     String?    @unique
  phone     String?    @unique
  sex       UserSex
  img       String?
  lostItems LostItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Teacher {
  id        Int        @id @default(autoincrement())
  firstName String
  lastName  String
  email     String?    @unique
  phone     String?    @unique
  sex       UserSex
  img       String?
  lostItems LostItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model LostItem {
  id          Int        @id @default(autoincrement())
  itemName    String
  description String?
  itemTypeId  Int
  itemType    ItemType   @relation(fields: [itemTypeId], references: [id])
  location    String
  foundDate   DateTime
  status      LostStatus
  img         String?
  studentId   Int
  student     Student    @relation(fields: [studentId], references: [id])
  teacherId   Int?
  teacher     Teacher?   @relation(fields: [teacherId], references: [id])
  userId      Int
  user        User       @relation(fields: [userId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model ItemType {
  id        Int        @id @default(autoincrement())
  typeName  String
  lostItems LostItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

enum LostStatus {
  FOUND
  RETURNED
}

enum UserRole {
  TEACHER
  ADMIN
}

enum UserSex {
  MALE
  FEMALE
}
